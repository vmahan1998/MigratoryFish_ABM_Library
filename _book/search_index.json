[["index.html", "Agent-Based Modeling Function Library for Simulating Diadromous Fish Migration Preface Motivation", " Agent-Based Modeling Function Library for Simulating Diadromous Fish Migration Vanessa Quintana 2025-04-07 Preface This library provides a comprehensive, modular framework for developing and documenting agent-based models (ABMs) that simulate the movement, behavior, and environmental interactions of migratory fish in coastal aquatic systems. It is designed to support the standardization and implementation of ABMs in fisheries management, enabling researchers and practitioners to address complex environmental questions and evaluate remediation or restoration scenarios. Motivation The goal of this resource is to support students, researchers, and decision-makers by making agent-based modeling of migratory fish more accessible, reproducible, and applicable to real-world fisheries and habitat management challenges. By providing a standardized framework for key behavioral processes, this library promotes consistency, transparency, and credibility in ecological forecasting and decision support tools. It also establishes a foundation for critical conversations about the behaviors and functions represented in migratory fish models, while supporting the empirical quantification of ecological relationships that influence movement, survival, and habitat use. "],["overview.html", "Chapter 1 Overview 1.1 Background 1.2 Introduction to Agent-Based Models 1.3 Structure 1.4 Application Context 1.5 How to Use This Library", " Chapter 1 Overview 1.1 Background Diadromous fish species such as river herring, striped bass, and sturgeon navigate coastal and estuarine systems that are increasingly affected by human activity, climate change, and legacy contaminants. Modeling their movement and behavior at fine spatial and temporal scales requires tools that can integrate physiological stressors, environmental variability, and behavior-based decision-making. Agent-based models are among the most powerful tools available for ecological forecasting and fisheries management, but they are also among the most complex. Their structure and computational demands can make them difficult to apply in practical management settings. Many biologists and ecologists who hold deep, species-specific expertise often have limited training in advanced programming or systems modeling. This is partly due to gaps in secondary and post-secondary education, where exposure to high-level mathematics and coding is often minimal, despite the fact that many ecological processes are governed by nonlinear systems and feedbacks. As a result, traditional approaches to modeling marine and diadromous fish frequently oversimplify or exclude key biological functions such as osmoregulation, thermoregulation, schooling behavior, and contaminant exposure. Many existing models also lack standardized representations of these behaviors, limiting the interpretability of results and reducing their usefulness for applied management. This function library was developed to address these limitations by offering modular, empirically grounded components designed for use in agent-based models. Each function is clearly documented and can be applied independently, allowing for transparent testing, modification, and reuse across a wide range of ecological modeling scenarios. 1.2 Introduction to Agent-Based Models provide basics of ABM 1.3 Structure Each chapter in this library corresponds to a major behavior or physiological function relevant to migratory fish, including: Osmoregulation Bioaccumulation of contaminants Thermoregulation Directional migration (landward and seaward) Schooling and Staging Selective Tidal Stream Transport Homing behavior Foraging Predator-prey interactions Spawning The final chapter provides guidance on how to integrate multiple functions into a complete agent-based model, demonstrating how these components work together to simulate fish behavior in dynamic coastal and estuarine systems. Within each chapter, each function or behavior is documented using the ODD protocol (Grimm et al., 2006; 2010; 2020). The ODD (Overview, Design concepts, Details) protocol is a standardized framework for describing agent-based models. It promotes transparency in model development and ensures consistency across implementations, especially when integrating multiple behavioral or ecological functions. Overview provides the purpose of the model component, identifies the entities involved (e.g., fish agents, environmental patches), and outlines the general processes. Design concepts describe the key theoretical underpinnings such as emergence, adaptation, objectives, sensing, stochasticity, and interaction. Details specify initialization steps, input data requirements, and the rules or submodels that govern behavior. By following the ODD protocol, this library ensures that each function is self-contained, interpretable, and ready for adaptation to a wide range of species, sites, or management scenarios. 1.4 Application Context This library was originally developed in support of research on the influence of tidal behavior and contaminant exposure on anadromous fish in the Penobscot River Estuary. However, its modular design allows for application to other estuarine and coastal systems where fish respond to gradients in salinity, temperature, velocity, and pollutants. Can include addition project or model links here* 1.5 How to Use This Library Each function or behavior in this library can be combined with others to build a complete agent-based model for migratory fish. These functions are designed to be modular, adaptable, and easily configured for different species, life stages, or site-specific conditions. For questions, feedback, guidance on implementation, or interest in adding to the library, please contact Vanessa Quintana at mahan.vanessa98@gmail.com. "],["osmoregulation-function.html", "Chapter 2 Osmoregulation Function 2.1 Overview 2.2 Purpose 2.3 Entities, State Variables, and Scales 2.4 Process Overview and Scheduling 2.5 Design Concepts 2.6 Initialization 2.7 Submodels", " Chapter 2 Osmoregulation Function 2.1 Overview Osmoregulation allows migratory fish to maintain homeostasis by regulating internal ion concentrations in response to varying environmental salinities. This function simulates osmotic or ion-regulatory stress, chloride cell expression, and the metabolic energy cost of osmoregulation in a spatially explicit context. 2.2 Purpose To simulate stress response to salinity changes for migratory fish in coastal systems by regulating chloride cell density and allocating energy toward ion-regulatory processes. 2.3 Entities, State Variables, and Scales 2.3.1 Patch Variables Variable Name Definition Salinity \\(S_{patch}\\) The salt concentration of a given patch, derived from hydrodynamic model inputs. 2.3.2 Agent Variables Variable Name Definition acclimated-salinity \\(S_{agent}\\) The salinity level the agent is currently acclimated to. ionregulatory-stress \\(I_{stress}\\) The level of stress an agent experiences when regulating ion balance due to osmotic difference. chloride-density-min \\(C_{min}\\) Minimum level of chloride cells, present even in low-stress conditions. chloride-density-max \\(C_{max}\\) Maximum level of chloride cells at high stress. chloride-cell-density \\(C\\) The current number of chloride cells expressed by the agent. chloride-max-proliferation \\(R_{proliferation}\\) The max number of chloride cells that can be expressed per time step. chloride-cells-this-tick \\(C_{tick}\\) The number of chloride cells created (or destroyed) in the current time step. acclimation-rate \\(\\alpha\\) The rate at which chloride cell density increases over time. C-mid \\(C_{mid}\\) The chloride cell density at which stress buffering is 50% effective. time-since-last-osmoregulation \\(t_{osmo}\\) The time elapsed since the last chloride cell regulation event. Energy \\(E_{agent}\\) The agent’s total available energy for physiological functions. E-osmo \\(E_{osmo}\\) Total energy used for ion regulation (osmoregulation). E-base \\(E_{base}\\) The base energy cost per chloride cell. E-creation \\(E_{creation}\\) The energy cost for producing new chloride cells. metabolic-max \\(Met_{max}\\) Maximum metabolic cost for chloride cell creation. 2.4 Process Overview and Scheduling Compute osmotic stress based on difference between \\(S_{patch}\\) and \\(S_{agent}\\). Adjust chloride cell density depending on time since last osmoregulation. Compute energy cost of osmoregulation. Deduct energy expenditure from agent’s energy pool. 2.5 Design Concepts Basic Principles: The model is based on principles of physiological ecology and osmoregulatory energetics in teleost and apterygian species. It draws from empirical findings (e.g., Allen et al., 2009; Little et al., 2023) and includes size scaling, stress buffering, and energy constraints. These principles are implemented at the submodel level (e.g., chloride proliferation, stress calculation) to simulate realistic physiological feedbacks to changes in environmental salinity. Emergence: Ion-regulatory stress, chloride cell expression, and energy expenditure emerge from an agent’s interaction with temporally and spatially variable salinity environments. These patterns are not pre-specified but arise dynamically through adaptive physiological responses. Adaptation: Agents respond to osmotic stress by adjusting chloride cell density, a trait that buffers stress. This process allows individuals to reduce internal-external salinity gradients and maintain ion homeostasis. Objectives: Agents seek to support survival by reducing stress and avoiding excessive energy loss through regulating chloride cell expression. Sensing: Agents sense local salinity (\\(S_{patch}\\)) and compare it with their acclimated salinity (\\(S_{agent}\\)). They also track their own energy state and time since last osmoregulation. Stochasticity: Acclimation may vary with \\(\\alpha\\), which can be drawn from a defined range per individual to reflect physiological variation across the population. Observation: Outputs include \\(I_{stress}\\), \\(C\\), \\(E_{osmo}\\), and \\(E_{agent}\\), all tracked per individual and exportable for analysis or visualization. 2.6 Initialization Variable Initialized Value Justification \\(S_{patch}\\) user-defined for data input This input can be user-defined realistic data values or known spatial data. \\(S_{agent}\\) 35 (psu) Assumes agents start acclimated to marine environment. \\(I_{stress}\\) 1 Acclimated agents have minimal stress levels. \\(C\\) 50% Starts with partial cell density, allowing for regulation depending on environmental conditions. \\(C_{min}\\) 10% A baseline level of chloride cells is necessary for basic osmoregulatory functions. \\(C_{max}\\) 100% Agents can’t express more than 100% of cells. \\(\\alpha\\) 0.0017 - 0.002 Osmolarity stabilization from Figure 3. in (Allen et al., 2009). \\(C_{mid}\\) 50% When cells are 50% density, stress buffering is 50% effective (Allen et al., 2009). \\(E_{agent}\\) 100% Agent starts with limited energy before migration. \\(E_{base}\\) Teleost (4%) Aptoerygian () Based on the branchial cost (Little et al., 2023; Kirschner, 1993). \\(Met_{max}\\) Teleost (3.5%) Based on the intestinal and renal cost &amp; size of agent (Little et al., 2023; Kirschner, 1993). \\(k\\) -0.75 Scaling component for body mass is negative (Kirschner, 1993) and follows Kleiber’s Law. 2.7 Submodels 2.7.1 Osmotic Stress Ion-regulatory stress (\\(I_{stress}\\)) is calculated based on the difference between an agent’s acclimated salinity and the ambient patch salinity, adjusted by the chloride cell buffering effect: \\[ I_{stress} = \\frac{\\log_{10}(1 + |S_{agent} - S_{patch}|) \\cdot 10}{1 + e^{-2 \\cdot (C / C_{mid})}} \\] Stress is capped within the range [1, 10], and may be reduced slightly over time if salinity remains stable and chloride density is sufficient: \\[ I_{stress} = I_{stress} \\cdot 0.98 \\quad \\text{if conditions are stable and } C &gt; C_{min} \\] Agents also slowly shift their acclimated salinity toward ambient salinity when conditions have been stable for several time steps: \\[ S_{agent} = S_{agent} + (S_{patch} - S_{agent}) \\cdot 0.02 \\] Where: \\(I_{stress}\\) is ion-regulatory (osmotic) stress, scaled between 1 and 10. \\(S_{agent}\\) is the agent’s acclimated salinity. \\(S_{patch}\\) is the environmental salinity at the current patch. \\(C\\) is the chloride cell density (percent of maximum). \\(C_{mid}\\) is the density at which buffering is 50% effective. 2.7.2 Chloride Cell Density Chloride cell proliferation is driven by the level of ion-regulatory stress the agent experiences when encountering a difference in salinity. The greater the stress, the higher the target chloride density the agent attempts to reach, up to a maximum threshold. Agents adjust their chloride cell density based on their current ion-regulatory stress and acclimation status. Chloride cells are not adjusted unless the agent’s energy exceeds 25%. The chloride cell density is based on stress: \\[ C_{target} = C_{min} + (C_{max} - C_{min}) \\cdot \\left(\\frac{I_{stress}}{10}\\right) \\] If salinity conditions have remained stable for an extended period (e.g., 288 ticks), \\(C_{target}\\) is slightly reduced to reflect partial downregulation of chloride cells due to long-term acclimation: \\[ C_{target} = C_{target} \\cdot 0.99 \\quad \\text{if stable} \\] Chloride cell density then approaches the target using a double-rate adjustment and capped maximum rate of change: \\[ \\Delta C = \\left(C_{target} - C_{current}\\right) \\cdot \\left(2 \\cdot R_{proliferation}\\right) \\] \\[ \\Delta C = \\max\\left(-R_{max}, \\min(R_{max}, \\Delta C)\\right) \\] If the agent has low energy (\\(\\leq 50\\%\\)), the adjustment rate is halved: \\[ \\Delta C = \\Delta C \\cdot 0.5 \\quad \\text{if energy is low} \\] Finally, the chloride cell density is updated and constrained between \\(C_{min}\\) and \\(C_{max}\\): \\[ C_{new} = \\max(C_{min}, \\min(C_{max}, C_{current} + \\Delta C)) \\] This ensures that the agent does not overshoot the physiologically realistic limit of chloride cell density, while still responding to osmotic stress. Chloride density is only recalculated after a given acclimation interval: \\[ t_{osmo} \\geq \\alpha^{-1} \\] After updating, the acclimation timer is reset: \\[ t_{osmo} = 0 \\] This prevents agents from recalculating chloride density every time step and allows for controlled, realistic responses to prolonged stress and salinity changes. Where: \\(I_{stress}\\) is the ion-regulatory stress, scaled from 1 to 10. \\(C_{target}\\) is the desired chloride cell density based on stress level. \\(C_{min}\\) and \\(C_{max}\\) are the bounds for chloride cell density. \\(R_{proliferation}\\) determines the maximum allowable increase per time step. \\(\\Delta C\\) is the rate of change in chloride cell expression. \\(R_{max} = (C_{max} - C_{min}) \\cdot R_{proliferation}\\) \\(C_{new}\\) is the percent of new chloride cell expression. \\(\\alpha\\) is the acclimation rate constant. \\(t_{osmo}\\) represents time since the last osmoregulation event. Osmoregulation Energy Metabolic cost related to size: \\[ E_{creation} = Met_{max} * (\\frac{M}{M_{max}})^k \\] Where: \\(E_{creation}\\) is the energy cost of chloride cell creation \\(Met_{max}\\) is the maximum metabolic cost of the agent \\(M\\) is equal to the agent’s size, where smaller fish spend proportionally more energy on osmoregulation (Little et al., 2023) \\(M_{max}\\) is the maximum mass of an agent within the population \\(k\\) follows size-dependent variation in energy allocation, consistent with a negative scaling exponent. Energy required for ion regulation: \\[ E_{osmo} = (E_{base} \\cdot C) + (E_{creation} \\cdot C_{tick}) \\] Where: \\(E_{base}\\) represents the energy cost per chloride cell for maintenance. \\(C\\) is the current chloride density. \\(E_{creation}\\) represents the cost of producing new chloride cells. \\(C_{tick}\\) is the number of newly created chloride cells in the current time step. 2.7.3 Energy Balance Agents balance energy to osmoregulate with total energy allowance: \\[ E_{agent} = E_{agent} - E_{osmo} \\] Where: \\(E_{agent}\\) is the total energy of the agent. \\(E_{osmo}\\) is the energy consumed during osmoregulation. "],["mercury-contamination-bioaccumulation-function.html", "Chapter 3 Mercury Contamination Bioaccumulation Function 3.1 Overview 3.2 Purpose 3.3 Entities, State Variables, and Scales 3.4 Process Overview and Scheduling 3.5 Design Concepts 3.6 Initialization 3.7 Submodels", " Chapter 3 Mercury Contamination Bioaccumulation Function 3.1 Overview This function simulates exposure and uptake risk of mercury (Hg) and methylmercury (MeHg) for migratory fish navigating contaminated aquatic environments. The model accounts for spatial and temporal variation in contaminant concentrations and includes physiological modulation based on ion-regulatory stress and suspended particulate matter (SPM). 3.2 Purpose To evaluate contaminant exposure and bioaccumulation risk in migratory fish due to mercury and methylmercury during migration through estuarine or coastal systems using stress. 3.3 Entities, State Variables, and Scales 3.3.1 Global Variables Variable Initialized Value Justification MeHg-Threshold \\(MeHg_{threshold}\\) 15 ug/kg 10% of mercury concentration (Gaudet et al., 1995) Hg-Threshold \\(Hg_{threshold}\\) 150 ug/kg (Gaudet et al., 1995) ((NOAA) National Oceanic and Atmospheric Administration, 1990) 3.3.2 Patch Variables Variable Name Definition Mercury \\(Hg_{patch}\\) The mercury concentration of a patch. Methylmercury \\(MeHg_{patch}\\) The methylmercury concentration of a patch. Suspended-particulate-matter \\(SPM_{t}\\) The concentration of suspended particulate matter (SPM) for a given patch, derived from hydrodynamic model inputs, which change temporally. 3.3.3 Agent Variables Variable Name Definition stress \\(S\\) The level of stress an agent experiences when moving. Hg-exposure-duration \\(Hg_{exp_t}\\) The amount of time an agent is exposed to mercury above healthy levels. MeHg-exposure-duration \\(MeHg_{exp_t}\\) The amount of time an agent is exposed to methylmercury above healthy levels. Hg-uptake-risk \\(Hg_{risk}\\) The risk associated for uptake of mercury. MeHg-uptake-risk \\(MeHg_{risk}\\) The risk associated for uptake of methylmercury. Hg-exposure \\(Hg_{t}\\) The amount of mercury exposed during current time step. MeHg-exposure \\(MeHg_{t}\\) The amount of methlymercury exposed during current time step. Hg-exposure-total \\(Hg_{net}\\) The net sum of mercury exposed to during migration. MeHg-exposure-total \\(MeHg_{net}\\) The net sum of methylmercury exposed to during migration. 3.4 Process Overview and Scheduling Evaluate current patch concentrations of mercury and methylmercury. Determine whether these exceed defined toxicity thresholds. Calculate exposure duration (if thresholds exceeded). Compute bioaccumulation risk based on contaminant levels, stress, and SPM. Update cumulative exposure totals. 3.5 Design Concepts Basic Principles: this model is grounded in toxicokinetics and ecological exposure theory. It draws on empirical literature (e.g., Gaudet et al. 1995, NOAA 1990) and integrates physiological stress responses with contaminant risk, reflecting a mechanistic understanding of exposure and bioaccumulation dynamics. Emergence: While exposure durations and patch-level concentrations are direct inputs, the exposure patterns (\\(Hg_{t}\\), \\(MeHg_{t}\\)), cumulative exposure totals (\\(Hg_{net}\\), \\(MeHg_{net}\\)), and risk profiles (\\(Hg_{risk}\\), \\(MeHg_{risk}\\)) emerge from agent movement across spatially and temporally variable environments and their physiological state, which arise from behavioral-environmental interactions over time. Adaptation: Agents adaptively accumulate risk based on their movement decisions, stress state, and encountered contaminant levels, simulating a physiological feedback process. Objectives: Agents do not explicitly seek to minimize risk, but their cumulative exposure and risk profiles can be used to evaluate environmental quality and cumulative toxicity risk for migratory fish. Sensing: Agents sense the local contaminant levels (\\(Hg_{patch}\\), \\(MeHg_{patch}\\)), suspended particulate matter (\\(SPM_{t}\\)), and their own stress state (\\(S\\)). Stochasticity: Randomized initial conditions (e.g., Hg and MeHg levels) may introduce variability in exposure patterns. Observation: Exposure variables (\\(Hg_t\\), \\(MeHg_{t}\\)), cumulative exposure (\\(Hg_{net}\\), \\(MeHg_{net}\\)), and risk scores (\\(Hg_{risk}\\), \\(MeHg_{risk}\\)) are collected per agent and can be exported for analysis. 3.6 Initialization Variable Initialized Value Justification \\(S\\) user-defined stress function Changes in an agent’s environment can induce a stress response, and can be induced by the user or environmental response. \\(Hg_{patch}\\) user-defined or data input This input can be user-defined realistic data values or known spatial data. \\(MeHg_{patch}\\) user-defined for data input This input can be user-defined realistic data values or known spatial data. 3.7 Submodels 3.7.1 Exposure Duration The cumulative number of time steps an agent is exposed to mercury and methylmercury above specified environmental thresholds: \\[ Hg_{exp_t} = Hg_{exp_t} + 1 \\quad \\text{if } Hg_{patch} &gt; Hg_{threshold} \\] \\[ MeHg_{exp_t} = MeHg_{exp_t} + 1 \\quad \\text{if } MeHg_{patch} &gt; MeHg_{threshold} \\] Where: \\(Hg_{exp_t}\\) is the total number of time steps exposed to mercury above threshold. \\(Hg_{patch}\\) is the mercury concentration at the current patch location. \\(Hg_{threshold}\\) is the defined mercury toxicity threshold. \\(MeHg_{exp_t}\\) is the total number of time steps exposed to methylmercury above threshold. \\(MeHg_{patch}\\) is the methylmercury concentration at the current patch location. \\(MeHg_{threshold}\\) is the defined methylmercury toxicity threshold. 3.7.2 Bioaccumulation Risk Estimate the bioaccumulation risk associated with mercury and methylmercury, where risk increases with contaminant concentration, ion-regulatory stress, and suspended particulate matter (SPM): \\[ Hg_{risk} = \\sum_{t=1}^T Hg_{risk} * (1+S) * (1+SPM_{t}) \\] \\[ MeHg_{risk} = \\sum_{t=1}^T MeHg_{risk} * (1+S) * (1+SPM_{t}) \\] Where: \\(Hg_{risk}\\) is the instantaneous mercury uptake risk. \\(MeHg_{risk}\\) is the instantaneous methylmercury uptake risk. \\(Hg_{normalized}\\) is the normalized Hg concentration (scaled 0–1) at each time step. \\(MeHg_{normalized}\\) is the normalized MeHg concentration (scaled 0–1). \\(S\\) is the stress level of the agent. \\(SPM_{t}\\) is the suspended particulate matter concentration at the patch for that time step. 3.7.3 Exposure to Contamination Agents record exposure to mercury and methylmercury only when concentrations exceed threshold values. These values are stored per time step and accumulated over time to assess total contaminant burden. Mercury: \\[ Hg_{t} = \\begin{cases}Hg_{patch}, &amp; \\text{if } Hg_{patch} &gt; Hg_{threshold} \\\\0, &amp; \\text{otherwise}\\end{cases} \\] \\[ Hg_{net} = \\sum_{t=1}^{T} Hg_{t} \\] Where: \\(Hg_{t}\\) is the mercury exposure in ng/g for current time step \\(Hg_{net}\\) is the cumulative mercury exposure in ng/g \\(Hg_{patch}\\) is the mercury concentration for the agent’s current patch Methylmercury: \\[ MeHg_{t} = \\begin{cases}MeHg_{patch}, &amp; \\text{if } MeHg_{patch} &gt; MeHg_{threshold} \\\\0, &amp; \\text{otherwise}\\end{cases} \\] \\[ MeHg_{net} = \\sum_{t=1}^{T} MeHg_{t} \\] Where: \\(MeHg_{t}\\) is the level of methylmercury exposure in ng/g for current time step \\(MeHg_{net}\\) is the cumulative methylmercury exposure in ng/g \\(MeHg_{patch}\\) is the methylmercury concentration for the agent’s current patch "],["landward-migration-behavior.html", "Chapter 4 Landward Migration Behavior 4.1 Overview 4.2 Purpose 4.3 Entities, State Variables, and Scales 4.4 Process Overview and Scheduling 4.5 Design Concepts 4.6 Initialization 4.7 Submodels", " Chapter 4 Landward Migration Behavior 4.1 Overview This function simulates landward (upstream) migratory behavior of fish navigating riverine and estuarine systems. Agents face resistance from environmental water velocity and incur energetic costs that scale with flow conditions and their size. 4.2 Purpose To model how migratory fish respond to varying riverine and tidal velocities by calculating effective swimming speed, difficulty of movement, and the energetic cost associated with upstream migration. 4.3 Entities, State Variables, and Scales 4.3.1 Global Variables Variable Initialized Value Justification minimum-velocity \\(V_{min}\\) Calculated from \\(V_{patch}\\) over the simulation period. Minimum river velocity based on hydrodynamic observations. maximum-velocity \\(V_{max}\\) Calculated from \\(V_{patch}\\) over the simulation period. Maximum river velocity based on hydrodynamic observations. 4.3.2 Patch Variables Variable Name Definition Velocity \\(V_{patch}\\) The along-channel velocity of a given patch, derived from hydrodynamic model inputs, where positive values are in the landward direction and negative values are in the seaward direction. 4.3.3 Agent Variables Variable Name Definition size \\(M_{agent}\\) The size of an agent. M-max \\(M_{max}\\) Maximum size found within the agent’s population. swimming-speed \\(V_{agent}\\) The current swimming speed of the agent. maximum-speed \\(swim_{max}\\) The maximum sustained speed of the agent. difficulty-factor \\(D_{f}\\) The level of difficulty an agent experiences when swimming. energy \\(E_{agent}\\) The total energy an agent has. swimming-energy-cost \\(Swim_{base}\\) The base energy cost of swimming. net-swimming-cost \\(E_{swim}\\) The total energy expenditure for swimming. heading \\(\\hat{u}\\) The direction agent is facing or “headed towards” Y-position \\(\\vec{Y}_t\\) This is the agent’s position in the Y plane 4.4 Process Overview and Scheduling Determine effective swimming speed based on flow velocity and agent energy. Compute swimming difficulty factor using normalized velocity. Calculate movement direction and update position. Deduct swimming energy cost from agent’s energy pool. 4.5 Design Concepts Basic Principles: This model builds on hydrodynamic constraints and energetic theory. It assumes that swimming against current imposes increased metabolic demands and that movement is energetically limited by individual traits. Emergence: Movement trajectories (\\(\\hat{u}\\)) and energy (\\(E_{agent}\\)) depletion emerge from the interaction between local flow conditions, fish traits, and directional behavior. Objectives: Agents aim to migrate upstream. While they do not explicitly optimize, their movement is shaped by their capacity to overcome current velocity \\(V_{patch}\\)). Sensing: Agents detect the local water velocity (\\(V_{patch}\\)) and use it to update their speed (\\(V_{agent}\\)) and effort (\\(D_{f}\\)). Observation: Agent positions (\\(\\vec{Y}_t\\) )and energy states can be tracked per time step to analyze migration success and efficiency. 4.6 Initialization Variable Initialized Value Justification \\(V_{patch}\\) user-defined for data input This input can be user-defined realistic data values or known spatial data. \\(M_{agent}\\) user-defined and species-specific Representative body length of a migrating agent. \\(M_{max}\\) user-defined and species-specific Based on the maximum body length in the agent’s population. \\(V_{agent}\\) \\(\\frac{V_{max}}{2}\\) Fish begin migration with a moderate swimming speed relative to their maximum capacity. \\(swim_{max}\\) \\(1.5 \\frac{body lengths}{sec}\\) Typical value for sustained swimming speed in small pelagic fish (refer to Videler, 1993). \\(E_{agent}\\) 100% Agent starts migration at 100% relative energy capacity. \\(swim_{base}\\) \\(0.02 \\cdot \\frac{M_{agent}}{M_{max}}^{k}\\) Scales locomotion cost nonlinearly with size; can be calibrated. \\(k\\) 0.75 Energetic scaling component that follows Kleiber’s Law. \\(\\hat{u}\\) \\(0^\\circ\\) Unit vector in the upstream direction 4.7 Submodels 4.7.1 Swimming Speed Agents calculate swimming speed based on their available energy and hydrodynamic resistance: \\[ V_{agent} = \\frac{swim_{max} * E_{agent}}{100} - (-k \\cdot |V_{patch}|) \\] Where: \\(swim_{max}\\) is the maximum sustained swimming speed of the agent. \\(V_{patch}\\) is the environmental velocity at the agent’s current patch. \\(V_{agent}\\) is the effective swimming speed of the agent. \\(E_{agent}\\) is the agent’s available energy percentage (0-100%). \\(k\\) is a scaling factor that determines how velocity influences swimming effort. 4.7.2 Swimming Difficulty The difficulty factor quantifies the additional energetic burden of swimming against different velocity conditions. In this case, difficulty is calculated using a normalized velocity-based proxy that scales difficulty from 1-10 between observed flow extremes. \\[D_{f} = 1 + 9 \\cdot \\left(\\frac{\\left( \\frac{|V_{patch}|}{swim_{max} \\cdot \\left(\\frac{M_{agent}}{M_{max}}\\right)} \\right)^k - V_{min}}{V_{max} - V_{min}}\\right)\\] Where: \\(M_{agent}\\) is the size of the agent. \\(M_{max}\\) is the maximum size within the agent’s population. \\(swim_{max}\\) is the maximum swimming speed capability of the agent. \\(V_{max}\\) is the maximum depth-averaged water velocity observed within the simulation. \\(V_{min}\\) is the minimum depth-averaged water velocity observed within the simulation. \\(V_{patch}\\) is the depth-averaged water velocity for the agent’s current patch. \\(D_{f}\\) is the swimming difficulty factor. Biological Justification: When \\(V_{patch} \\approx 0\\), difficulty is moderate. When \\(V_{patch} &lt; 0\\), difficulty increases because the fish is actively swimming against the current. When \\(V_{patch} &gt; 0\\), difficulty is minimal as fish drift with the current. 4.7.3 Swimming Movement During landward migration, agents orient upstream and move forward based on their calculated swimming speed: \\[ \\vec{Y}_{t+1} = \\vec{Y}_t + V_{agent} \\cdot \\hat{u} \\] Where: \\(\\vec{Y}_t\\) is the agent’s current spatial position. \\(\\vec{Y}_{t+1}\\) is the agent’s updated spatial position after one time step. \\(V_{agent}\\) is the swimming speed calculated from energy and difficulty. \\(\\hat{u}\\) is the unit vector in the landward direction. 4.7.4 Swimming Energy Swimming energy cost is determined by the base cost of locomotion scaled by a difficulty factor raised to a scaling factor. This allows energy expenditure to increase non-linearly as flow resistance increases. \\[ E_{swim} = Swim_{base} \\cdot D_f^{k} \\] Where: \\(E_{swim}\\) is the energy cost of swimming. \\(Swim_{base}\\) is the base swimming cost based on agent size. \\(D_f\\) is the swimming difficulty factor. \\(k\\) is the scaling factor, reflecting nonlinear energy demand. 4.7.5 Energy Balance Agents balance energy to swim with total energy allowance: \\[ E_{agent} = E_{agent} - E_{swim} \\] Where: \\(E_{agent}\\) is the current energy available to the agent. \\(E_{swim}\\) is the energy cost of swimming in this time step. "],["seaward-migration-behavior.html", "Chapter 5 Seaward Migration Behavior 5.1 Overview 5.2 Purpose 5.3 Entities, State Variables, and Scales 5.4 Process Overview and Scheduling 5.5 Design Concepts 5.6 Initialization 5.7 Submodels 5.8 Swimming Energy", " Chapter 5 Seaward Migration Behavior 5.1 Overview This function simulates seaward (downstream) migratory behavior of fish navigating riverine and estuarine systems. Agents face resistance from tidal flows and benefit from downstream riverine flows. The function models effective swimming speed, the difficulty of movement, and energetic costs during seaward migration. 5.2 Purpose To model how migratory fish respond to along-channel velocity when traveling seaward by determining swimming speed, hydrodynamic difficulty, and the energetic cost of downstream migration. 5.3 Entities, State Variables, and Scales 5.3.1 Global Variables Variable Initialized Value Justification minimum-velocity \\(V_{min}\\) Calculated from \\(V_{patch}\\) over the simulation period. Minimum river velocity based on hydrodynamic observations. maximum-velocity \\(V_{max}\\) Calculated from \\(V_{patch}\\) over the simulation period. Maximum river velocity based on hydrodynamic observations. 5.3.2 Patch Variables Variable Name Definition Velocity \\(V_{patch}\\) The along-channel velocity of a given patch, derived from hydrodynamic model inputs, where positive values are in the landward direction and negative values are in the seaward direction. 5.3.3 Agent Variables Variable Name Definition size \\(M_{agent}\\) The size of an agent. M-max \\(M_{max}\\) Maximum size found within the agent’s population. swimming-speed \\(V_{agent}\\) The current swimming speed of the agent. maximum-speed \\(swim_{max}\\) The maximum sustained speed of the agent. difficulty-factor \\(D_{f}\\) The level of difficulty an agent experiences when swimming. energy \\(E_{agent}\\) The total energy an agent has. swimming-energy-cost \\(Swim_{base}\\) The base energy cost of swimming. net-swimming-cost \\(E_{swim}\\) The total energy expenditure for swimming. heading \\(\\hat{u}\\) The direction agent is facing or “headed towards” Y-position \\(\\vec{Y}_t\\) This is the agent’s position in the Y plane 5.4 Process Overview and Scheduling Determine effective swimming speed based on flow velocity and agent energy. Compute swimming difficulty factor using normalized velocity. Calculate movement direction and update position. Deduct swimming energy cost from agent’s energy pool. 5.5 Design Concepts Basic Principles: This model builds on hydrodynamic constraints and energetic theory. It assumes that swimming against current imposes increased metabolic demands and that movement is energetically limited by individual traits. Emergence: Movement trajectories (\\(\\hat{u}\\)) and energy (\\(E_{agent}\\)) depletion emerge from the interaction between local flow conditions, fish traits, and directional behavior. Objectives: Agents aim to migrate downstream. While they do not explicitly optimize, their movement is shaped by their capacity to overcome current velocity \\(V_{patch}\\)). Sensing: Agents detect the local water velocity (\\(V_{patch}\\)) and use it to update their speed (\\(V_{agent}\\)) and effort (\\(D_{f}\\)). Observation: Agent positions (\\(\\vec{Y}_t\\) )and energy states can be tracked per time step to analyze migration success and efficiency. 5.6 Initialization Variable Initialized Value Justification \\(V_{patch}\\) user-defined for data input This input can be user-defined realistic data values or known spatial data. \\(M_{agent}\\) user-defined and species-specific Representative body length of a migrating agent. \\(M_{max}\\) user-defined and species-specific Based on the maximum body length in the agent’s population. \\(V_{agent}\\) \\(\\frac{V_{max}}{2}\\) Fish begin migration with a moderate swimming speed relative to their maximum capacity. \\(swim_{max}\\) \\(1.5 \\frac{body lengths}{sec}\\) Typical value for sustained swimming speed in small pelagic fish (refer to Videler, 1993). \\(E_{agent}\\) 100% Agent starts migration at 100% relative energy capacity. \\(swim_{base}\\) \\(0.02 \\cdot \\frac{M_{agent}}{M_{max}}^{k}\\) Scales locomotion cost nonlinearly with size; can be calibrated. \\(k\\) 0.75 Energetic scaling component that follows Kleiber’s Law. \\(\\hat{u}\\) \\(180^\\circ\\) Unit vector in the downstream direction 5.7 Submodels 5.7.1 Swimming Speed \\[ V_{agent} = \\frac{V_{max} * E_{agent}}{100} - (k \\cdot |V_{patch}|) \\] Where: \\(V_{max}\\) is the maximum sustained swimming speed of the agent. \\(V_{patch}\\) is the environmental velocity at the agent’s current patch. \\(V_{agent}\\) is the effective swimming speed of the agent. \\(E_{agent}\\) is the agent’s available energy percentage (0-100%). \\(k\\) is a scaling factor that determines how velocity influences swimming effort. 5.7.2 Swimming Difficulty The difficulty factor quantifies the additional energetic burden of swimming against different velocity conditions. In this case, difficulty is calculated using a normalized velocity-based proxy that linearly scales difficulty from 1-10 between observed flow extremes. \\[D_{f} = 1 + 9 \\cdot \\left(\\frac{\\left( \\frac{|V_{patch}|}{V_{max} \\cdot \\left(\\frac{M_{agent}}{M_{max}}\\right)} \\right)^k - V_{min}}{V_{max} - V_{min}}\\right)\\] Where: \\(M_{agent}\\) is the size of the agent. \\(M_{max}\\) is the maximum size within the agent’s population. \\(V_{max}\\) is the maximum swimming speed capability of the agent. \\(V_{max}\\) is the maximum depth-averaged water velocity observed within the simulation. \\(V_{min}\\) is the minimum depth-averaged water velocity observed within the simulation. \\(V_{patch}\\) is the depth-averaged water velocity for the agent’s current patch. \\(D_{f}\\) is the swimming difficulty factor. Biological Justification When \\(V_{patch} \\approx 0\\), difficulty is moderate. When \\(V_{patch} &lt; 0\\), difficulty increases because the fish is actively swimming against the current. When \\(V_{patch} &gt; 0\\), difficulty is minimal as fish drift with the current. 5.7.3 Swimming Movement During landward migration, agents orient upstream and move forward based on their calculated swimming speed: \\[ \\vec{Y}_{t+1} = \\vec{Y}_t + V_{agent} \\cdot \\hat{u} \\] Where: \\(\\vec{Y}_t\\) is the agent’s current spatial position. \\(\\vec{Y}_{t+1}\\) is the agent’s updated spatial position after one time step. \\(V_{agent}\\) is the swimming speed calculated from energy and difficulty. \\(\\hat{u}\\) is the unit vector in the seaward direction (180° heading, downstream). 5.8 Swimming Energy Swimming energy cost is determined by the base cost of locomotion scaled by a difficulty factor raised to a power. This allows energy expenditure to increase non-linearly as flow resistance increases. \\[ E_{swim} = Swim_{base} \\cdot D_f^{k} \\] Where: \\(E_{swim}\\) is the energy cost of swimming. \\(Swim_{base}\\) is the base swimming cost based on agent size. \\(D_f\\) is the swimming difficulty factor. \\(k\\) is the scaling exponent, reflecting nonlinear energy demand. 5.8.1 Energy Balance Fish allocate energy efficiently, balancing osmoregulation with other survival functions. \\[ E_{agent} = E_{agent} - E_{swim} \\] Where: \\(E_{agent}\\) is the current energy available to the agent. \\(E_{swim}\\) is the energy cost of swimming in this time step. "],["schooling-behavior.html", "Chapter 6 Schooling Behavior 6.1 Overview 6.2 Purpose 6.3 Entities, State Variables, and Scales 6.4 Process Overview and Scheduling 6.5 Design Concepts 6.6 Initialization 6.7 Submodels", " Chapter 6 Schooling Behavior 6.1 Overview 6.2 Purpose 6.3 Entities, State Variables, and Scales 6.3.1 Patch Variables Variable Name Definition 6.3.2 Agent Variables Variable Name Definition 6.4 Process Overview and Scheduling 6.5 Design Concepts Basic Principles: Emergence: Adaptation: Objectives: Learning: Prediction: Sensing: Interaction: Stochasticity: Collectives: Observation: 6.6 Initialization Variable Initialized Value Justification 6.7 Submodels "],["selective-tidal-stream-transport.html", "Chapter 7 Selective Tidal Stream Transport 7.1 Overview 7.2 Purpose 7.3 Entities, State Variables, and Scales 7.4 Process Overview and Scheduling 7.5 Design Concepts 7.6 Initialization 7.7 Submodels", " Chapter 7 Selective Tidal Stream Transport 7.1 Overview Selective Tidal Stream Transport (STST) is a behavioral strategy that enables agents to conserve energy by passively drifting with the current. It is triggered when the along-channel velocity of the patch exceeds the agent’s effective swimming speed, and that speed is below a species-specific minimum threshold. Once engaged, agents align with the tidal current and are carried downstream or upstream, depending on flow velocity. STST reduces the metabolic cost of movement by substituting active swimming with passive transport. This behavior persists for a limited duration or until swimming ability improves, after which agents resume directional migration. 7.2 Purpose To simulate a passive energy-conserving behavior in migratory fish that allows them to use tidal currents to move when swimming capacity is insufficient to overcome flow velocities. 7.3 Entities, State Variables, and Scales 7.3.1 Patch Variables Variable Name Definition Velocity \\(V_{patch}\\) The along-channel velocity of a given patch, derived from hydrodynamic model inputs, where positive values are in the landward direction and negative values are in the seaward direction. tidal-transport-in-patch Count of agents exhibiting tidal stream transport within a patch (for habitat quality analysis). 7.3.2 Agent Variables Variable Name Definition energy \\(E_{agent}\\) Total energy available to the agent. swimming energy \\(E_{swim}\\) Energy expenditure from movement per time step. base swim energy \\(swim_{base}\\) Baseline energy cost of movement. swimming difficulty \\(D_f\\) Velocity-based proxy representing hydrodynamic resistance. in-STST? \\(STST_{?}\\) Boolean value indicating if the agent is actively in STST. swimming speed \\(V_{agent}\\) The effective swimming speed of the agent. minimum threshold speed \\(Speed_{min}\\) The minimum speed at which an agent will move. 7.4 Process Overview and Scheduling Compare swimming speed (\\(V_{agent}\\)) with flow speed (\\(V_{patch}\\)). If \\(|V_{patch}| &gt; V_{agent}\\) and \\(V_{agent} \\leq Speed_{min}\\), enter STST. In STST: align with current, update position via drift, apply reduced energy cost. If \\(V_{agent} &gt; Speed_{min}\\), exit STST and resume active swimming. 7.5 Design Concepts Basic Principles: Selective tidal stream transport is based on behavioral ecology and energetics, simulating the tradeoff between active swimming and energy conservation through passive transport. Emergence: Passive drift behavior and resulting migration paths emerge from agent-flow interactions and individual swimming limitations. Adaptation: Agents adapt their mode of movement based on their swimming ability relative to environmental flow, dynamically choosing energy-efficient strategies. Objectives: Agents seek to minimizing energy loss in strong flows. Sensing: Agents sense their own \\(V_{agent}\\) and the \\(V_{patch}\\) to determine whether passive drift is needed. Observation: Records STST patch events , energy expenditure (\\(E_{agent}\\)), and displacement are logged to analyze behavior across flow regimes. 7.6 Initialization Variable Initialized Value Justification \\(V_{agent}\\) Based on size, energy, and difficulty factor Reflects agent’s swimming capability based on metabolic limits. \\(swim_{min}\\) Species-specific parameter Represents the minimum sustained swimming velocity of the agent. \\(swim_{max}\\) Species-specific parameter Represents the maximum sustained swimming velocity of the agent. \\(E_{agent}\\) 100 Assumes full energy at the start of simulation or at spawning. \\(swim_{base}\\) \\(0.02 \\cdot \\frac{M_{agent}}{M_{max}}^{k}\\) Scales locomotion cost nonlinearly with size; can be calibrated. 7.7 Submodels 7.7.1 Trigger Conditions for STST Agents compare their swimming ability to the flow conditions. If local flow exceeds their capability and their effort is below a defined threshold, they enter STST: \\[ |V_{patch}| &gt; V_{agent} \\quad \\text{and} \\quad V_{agent} \\leq Speed_{min} \\] While in STST: Heading aligns with the current (drift vector) &amp; swimming speed is set to: \\[ V_{agent} = |V_{patch}| \\] Energy is set as: \\[ E_{swim} = swim_{base} \\] Where: \\(V_{agent}\\) is the current swimming speed of the agent. \\(V_{patch}\\) is the along-channel velocity at the agent’s current patch. \\(Speed_{min}\\) is the minimum sustainable swimming speed of the agent. \\(swim_{base}\\) is the base swimming cost based on agent size. \\(E_{swim}\\) is the total energy cost during passive movement. 7.7.2 Behavior During STST While in STST, agents align with the current (either landward or seaward) and are passively transported: \\[ \\vec{Y}_{t+1} = \\vec{Y}_t + |V_{patch}| \\cdot \\hat{u} \\] Swimming speed is overwritten: \\[ V_{agent} = |V_{patch}| \\] Energy cost is minimized: \\[ E_{swim} = swim_{base} \\] Where: \\(\\vec{Y}_t\\) is the agent’s current spatial position. \\(\\vec{Y}_{t+1}\\) is the position after drifting. \\(V_{patch}\\) is the along-channel velocity at the agent’s current patch. \\(\\hat{u}_{patch}\\) is the direction of the patch velocity (unit vector). \\(swim_{base}\\) is the base swimming cost based on agent size. \\(E_{swim}\\) is the total energy cost during passive movement. 7.7.3 Stop Conditions for STST Agents exit STST when they regain sufficient swimming capacity to exceed threshold: \\[ V_{agent} &gt; Speed_{min} \\] Where: \\(V_{agent}\\) is the current swimming speed of the agent. \\(Speed_{min}\\) is the minimum sustainable swimming speed of the agent. This triggers a return to active migratory movement and deactivates \\(STST_{?}\\). "],["staging-behavior.html", "Chapter 8 Staging Behavior 8.1 Overview 8.2 Purpose 8.3 Entities, State Variables, and Scales 8.4 Process Overview and Scheduling 8.5 Design Concepts 8.6 Initialization 8.7 Submodels", " Chapter 8 Staging Behavior 8.1 Overview Staging is a behavioral state that allows agents to temporarily halt migration and recover energy or acclimate to dynamic estuary conditions (i.e., temperature, salinity) before continuing upstream (landward) or downstream (seaward) movement. It is triggered when agents experience low energy or high physiological stress and is resolved when recovery thresholds are met. 8.2 Purpose To simulate the biologically necessary pause in migratory activity used for energy recovery and physiological acclimation, particularly under stressful conditions. 8.3 Entities, State Variables, and Scales 8.3.1 Patch Variables Variable Name Definition Velocity \\(V_{patch}\\) The along-channel velocity of a given patch, derived from hydrodynamic model inputs, where positive values are in the landward direction and negative values are in the seaward direction. staging-in-patch Count of staging agents within a patch (for habitat quality analysis). 8.3.2 Agent Variables Variable Name Definition size \\(M_{agent}\\) The size of an agent. M-max \\(M_{max}\\) Maximum size found within the agent’s population. age \\(A_{agent}\\) The age of an agent. A-max \\(A_{max}\\) Maximum age found within the agent’s population. energy \\(E_{agent}\\) The total energy the agent currently possesses. stress \\(S\\) Stress level based on environmental mismatch. staging? \\(stage_{?}\\) Boolean flag indicating whether the agent is currently staging. 8.4 Process Overview and Scheduling Evaluate energy and stress levels. If energy is ≤ 25% or stress &gt; 5, agent enters staging behavior. During staging, agents stop migrating, form schools, seek calm water, and regain energy. If energy ≥ 75% and stress = 1, staging ends and active migration resumes. 8.5 Design Concepts Basic Principles: Staging is based on physiological ecology principles recognizing the need for energetic and osmoregulatory recovery before continued migration. Emergence: Collective staging areas and patterns emerge from local environmental conditions and individual agent needs. Adaptation: Agents adaptively stop migrating when unable to continue due to exhaustion or stress, shifting to a recovery behavior. Sensing: Agents assess their internal energy and stress state. Stochasticity: Recovery rate includes random variation to simulate individual differences. Collectives: Agents may cluster spatially during staging but do not form persistent groups. Observation: Number of staging agents and energy dynamics can be recorded for habitat analysis. 8.6 Initialization Variable Initialized Value Justification size \\(M_{agent}\\) user-defined and species-specific Representative body length of a migrating agent. M-max \\(M_{max}\\) user-defined and species-specific Based on the maximum body length in the agent’s population. age \\(A_{agent}\\) user-defined and species-specific Representative age length of a migrating agent. A-max \\(A_{max}\\) user-defined and species-specific Based on the maximum age in the agent’s population. energy \\(E_{agent}\\) \\(100 \\%\\) Agent starts migration at 100% relative energy capacity. Stress \\(S\\) 1 Acclimated agents have minimal stress levels. \\(k\\) 0.75 Energetic scaling component that follows Kleiber’s Law. \\(\\alpha\\) -0.3 to 0.5 (user-defined) This value can be calibrated based on your biological assumptions: • \\(\\alpha &lt; 0\\): Younger fish recover faster (higher turnover, rapid metabolism) • \\(\\alpha &gt; 0\\): Older fish recover faster (more energy reserves, lower stress sensitivity) • \\(\\alpha = 0\\): Age has no effect on recovery (neutral assumption) 8.7 Submodels 8.7.1 Trigger Conditions for Staging Agents will enter the staging state under either of the following conditions: \\[ E_{agent} \\leq 25 \\% \\] \\[ S &gt; 5 \\] Where: \\(E_{agent}\\) is the current energy available to the agent. \\(S\\) is the current stress level of the agent. These thresholds are designed to prevent migration collapse due to exhaustion or high osmotic stress. 8.7.2 Behavior During Staging During staging, agents move to the nearest water patch with the lowest absolute velocity to reduce energetic costs. If no such patch is found, a random neighboring water patch is selected. Position is updated as: \\[ \\vec{Y}_{t+1} = \\vec{Y}_{target} \\] Energy recovery occurs at a variable rate: \\[ E_{agent} = E_{agent} + \\left((1 + \\epsilon) \\cdot \\left( \\frac{M_{agent}}{M_{max}} \\right)^k \\cdot \\left( \\frac{A_{agent}}{A_{max}} \\right)^\\alpha \\right) \\quad \\text{where } \\epsilon \\sim U(0,1),\\ k \\leq 1 \\] Patch records presence of staging agents: \\[ \\text{staging-in-patch} = \\text{staging-in-patch} + 1 \\] Where: \\(\\vec{Y}_{t+1}\\) is the position after drifting. \\(\\vec{Y}_{target}\\) is the agent’s target spatial position. \\(V_{patch}\\) is the along-channel velocity at the agent’s current patch. \\(M_{agent}\\) is the size of the agent. \\(M_{max}\\) is the maximum size within the agent’s population. \\(A_{agent}\\): the age of the agent. \\(A_{max}\\): the maximum age within the population. \\(E_{swim}\\) is the total energy cost during passive movement. \\(k\\) is the scaling exponent, reflecting nonlinear energy recovery. \\(\\alpha\\): an age-scaling exponent Suggestion: • \\(\\alpha = -0.25\\) if modeling faster recovery in younger fish. • \\(\\alpha = 0.25\\) if modeling increased efficiency in older/larger individuals. 8.7.3 Stop Conditions for Staging Agent will remain in the staging state until both of the following conditions are met: \\[ E_{agent} \\geq 75 \\% \\] \\[ S = 1 \\] Where: \\(E_{agent}\\) is the current energy available to the agent. \\(S\\) is the current stress level of the agent. "],["homing-behavior.html", "Chapter 9 Homing Behavior 9.1 Overview 9.2 Purpose 9.3 Entities, State Variables, and Scales 9.4 Process Overview and Scheduling 9.5 Design Concepts 9.6 Initialization 9.7 Submodels", " Chapter 9 Homing Behavior 9.1 Overview 9.2 Purpose 9.3 Entities, State Variables, and Scales 9.3.1 Patch Variables Variable Name Definition 9.3.2 Agent Variables Variable Name Definition 9.4 Process Overview and Scheduling 9.5 Design Concepts Basic Principles: Emergence: Adaptation: Objectives: Learning: Prediction: Sensing: Interaction: Stochasticity: Collectives: Observation: 9.6 Initialization Variable Initialized Value Justification 9.7 Submodels "],["foraging-behavior.html", "Chapter 10 Foraging Behavior 10.1 Overview 10.2 Purpose 10.3 Entities, State Variables, and Scales 10.4 Process Overview and Scheduling 10.5 Design Concepts 10.6 Initialization 10.7 Submodels", " Chapter 10 Foraging Behavior 10.1 Overview 10.2 Purpose 10.3 Entities, State Variables, and Scales 10.3.1 Patch Variables Variable Name Definition 10.3.2 Agent Variables Variable Name Definition 10.4 Process Overview and Scheduling 10.5 Design Concepts Basic Principles: Emergence: Adaptation: Objectives: Learning: Prediction: Sensing: Interaction: Stochasticity: Collectives: Observation: 10.6 Initialization Variable Initialized Value Justification 10.7 Submodels "],["predation-and-fleeing-behavior.html", "Chapter 11 Predation and Fleeing Behavior 11.1 Overview 11.2 Purpose 11.3 Entities, State Variables, and Scales 11.4 Process Overview and Scheduling 11.5 Design Concepts 11.6 Initialization 11.7 Submodels", " Chapter 11 Predation and Fleeing Behavior 11.1 Overview 11.2 Purpose 11.3 Entities, State Variables, and Scales 11.3.1 Patch Variables Variable Name Definition 11.3.2 Agent Variables Variable Name Definition 11.4 Process Overview and Scheduling 11.5 Design Concepts Basic Principles: Emergence: Adaptation: Objectives: Learning: Prediction: Sensing: Interaction: Stochasticity: Collectives: Observation: 11.6 Initialization Variable Initialized Value Justification 11.7 Submodels "],["spawning-behavior.html", "Chapter 12 Spawning Behavior 12.1 Overview 12.2 Purpose 12.3 Entities, State Variables, and Scales 12.4 Process Overview and Scheduling 12.5 Design Concepts 12.6 Initialization 12.7 Submodels", " Chapter 12 Spawning Behavior 12.1 Overview 12.2 Purpose 12.3 Entities, State Variables, and Scales 12.3.1 Patch Variables Variable Name Definition 12.3.2 Agent Variables Variable Name Definition 12.4 Process Overview and Scheduling 12.5 Design Concepts Basic Principles: Emergence: Adaptation: Objectives: Learning: Prediction: Sensing: Interaction: Stochasticity: Collectives: Observation: 12.6 Initialization Variable Initialized Value Justification 12.7 Submodels "],["model-building-tutorial-staging-schooling.html", "Chapter 13 Model Building Tutorial: Staging &amp; Schooling 13.1 Implementation in NetLogo: 13.2 Implementation in R:", " Chapter 13 Model Building Tutorial: Staging &amp; Schooling 13.0.1 Module Integration Brief explanation of how functions (e.g., staging, schooling) interact. Clarify temporal structure (e.g., tick-based sequence) and spatial scale. Describe coupling logic 13.0.2 Function Dependencies What variables are required as inputs for each function? What functions must be called before/after? (e.g., must calculate stress before checking staging triggers) Dependency table showing variable flow between submodels. Function Required Inputs Output Variables Dependent On staging E_agent, I_stress E_agent, patch records osmoregulation schooling 13.1 Implementation in NetLogo: Programming details example code 13.2 Implementation in R: Programming details example code "],["model-building-tutorial-landward-migration-selective-tidal-stream-transport.html", "Chapter 14 Model Building Tutorial: Landward Migration &amp; Selective Tidal Stream Transport 14.1 Implementation in NetLogo: 14.2 Implementation in R:", " Chapter 14 Model Building Tutorial: Landward Migration &amp; Selective Tidal Stream Transport 14.0.1 Module Integration Brief explanation of how functions (e.g., staging, schooling) interact. Clarify temporal structure (e.g., tick-based sequence) and spatial scale. Describe coupling logic 14.0.2 Function Dependencies What variables are required as inputs for each function? What functions must be called before/after? (e.g., must calculate stress before checking staging triggers) Dependency table showing variable flow between submodels. Function Required Inputs Output Variables Dependent On osmoregulation S_patch, S_agent, C I_stress, C_new, E_osmo environmental-sensing staging E_agent, I_stress E_agent, patch records osmoregulation migration E_agent, V_patch Y_t, E_agent staging, STST STST V_patch, V_agent Y_t+1, E_agent migration logic 14.1 Implementation in NetLogo: Programming details example code 14.2 Implementation in R: Programming details example code "],["complex-model-building-tutorial-one-way-migration.html", "Chapter 15 Complex Model Building Tutorial: One-Way Migration 15.1 Implementation in NetLogo: 15.2 Implementation in R:", " Chapter 15 Complex Model Building Tutorial: One-Way Migration 15.0.1 Module Integration Brief explanation of how functions (e.g., staging, schooling) interact. Clarify temporal structure (e.g., tick-based sequence) and spatial scale. Describe coupling logic 15.0.2 Function Dependencies What variables are required as inputs for each function? What functions must be called before/after? (e.g., must calculate stress before checking staging triggers) Dependency table showing variable flow between submodels. 15.1 Implementation in NetLogo: Programming details example code 15.2 Implementation in R: Programming details example code "],["modeling-toolkit.html", "Chapter 16 Modeling Toolkit 16.1 Learning Resources 16.2 Best Practices 16.3 Code Repositories &amp; Examples", " Chapter 16 Modeling Toolkit 16.1 Learning Resources NetLogo Library: Brief note on structure (e.g., model categories), how you used it (e.g., behavior ideas, calibration). NetLogo User Manual: Link to official documentation. NetLogo Modeling Commons: Peer-contributed models, code sharing, and idea sourcing. NetLogo Forum: Where to get help or search issues. Book References: - Railsback &amp; Grimm (2019) *Agent-Based and Individual-Based Modeling* - Grimm &amp; Railsback (2005) *Individual-Based Modeling and Ecology* - Add others specific to behavior/physiology like Kirschner, Allen, or Little. 16.2 Best Practices ODD Protocol (Overview, Design concepts, Details): Follow for transparent and structured documentation of agent-based models. Ensures clarity across entities, processes, and assumptions. Modular Design: Structure behavioral functions into separate procedures (e.g., swimming, osmoregulation, staging) to support testing, integration, and reuse. Version Control: Use GitHub or other tools to track changes and link code to associated research outputs. Naming Conventions: Use clear, consistent names (e.g., V_agent, E_osmo, stage?) to reduce error and improve interpretability. Documentation in Code: Annotate key procedures, thresholds, and formulas directly in NetLogo and R scripts. Journal References: 16.3 Code Repositories &amp; Examples Project Repository Description Penobscot River GitHub link Simulates agent-based landward &amp; seaward migration using STST. Martha’s Vineyard GitHub link Chloride cell regulation and stress-energy tradeoffs. other GitHub link Implements estuary resting behavior based on stress and energy. other GitHub link Code for plotting NetLogo outputs in R. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
